# Build and test on push and PRs
name: Build and Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest

    container:
      image: cypress/browsers:node16.17.1-chrome105-ff104-edge
      options: --user 1001

    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install Dependencies
        run: yarn

      - name: Run e2e
        uses: cypress-io/github-action@v4
        with:
          build: yarn build
          start: yarn start
          browser: ${{ matrix.browser }}

      # Go to https://api.imgur.com/oauth2/addclient
      # to create OAuth2 to get client_id
      - uses: devicons/public-upload-to-imgur@v2.2.1
        if: always()
        id: screenshots
        with:
          path: /__w/dashboard/dashboard/cypress/screenshots/**/*.png
          client_id: ${{ secrets.IMGUR_CLIENT_ID }}

      - if: always()
        run: echo ${{ steps.screenshots.outputs.markdown_urls }} >> $GITHUB_STEP_SUMMARY

  build:
    name: Build and Export
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14

      - name: Install Dependencies
        run: yarn

      - name: Build and Export
        run: yarn export
